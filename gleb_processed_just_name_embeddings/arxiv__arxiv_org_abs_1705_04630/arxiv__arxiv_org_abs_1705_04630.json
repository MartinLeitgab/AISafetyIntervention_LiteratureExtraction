{
  "nodes": [
    {
      "name": "Unreliable long-term forecasts in complex environments",
      "aliases": [
        "forecast failure for complex environments",
        "long-horizon prediction unreliability"
      ],
      "type": "concept",
      "description": "Standard machine-learning forecasters often become inaccurate or vacuous when the real environment is more complex than their hypothesis class, undermining safe decision-making over long time horizons.",
      "concept_category": "risk",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Introduced in Section 1 Introduction as the motivating risk for developing new forecasting methods."
    },
    {
      "name": "Limitations of realizable and unrealizable forecasting assumptions",
      "aliases": [
        "realizable setting unrealistic",
        "short-term guarantees in unrealizable setting"
      ],
      "type": "concept",
      "description": "The realizable setting assumes the true distribution lies in the model class—often false. The unrealizable setting only guarantees short-term performance, therefore both fail to secure reliable long-term forecasts.",
      "concept_category": "problem analysis",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Section 1 details why existing frameworks cannot guarantee the needed forecasts."
    },
    {
      "name": "Incomplete models as convex sets representing partial environment properties",
      "aliases": [
        "convex incomplete model",
        "partial-realizability model class"
      ],
      "type": "concept",
      "description": "Defines an ‘incomplete model’ M ⊂ P(O^ω) as a convex set capturing only the properties of the environment that are simple enough to model, allowing Knightian uncertainty about all other aspects.",
      "concept_category": "theoretical insight",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Section 2 introduces this core conceptual advance that underpins the new forecasting guarantee."
    },
    {
      "name": "Dominant forecaster approach using gamblers to converge to incomplete models",
      "aliases": [
        "dominant forecaster concept",
        "forecast-as-market design rationale"
      ],
      "type": "concept",
      "description": "Constructs a forecaster that sets prices so that no finite-budget gambler can obtain unbounded profit, ensuring forecasts converge to every incomplete model in a predefined countable set.",
      "concept_category": "design rationale",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Sections 3–4 explain why using dominance against gamblers realises the theoretical insight."
    },
    {
      "name": "Combinatorial prediction market pricing satisfying no unbounded profit for gamblers",
      "aliases": [
        "market-pricing fixed-point",
        "Kakutani-Glicksberg-Fan priced forecaster"
      ],
      "type": "concept",
      "description": "Implements the design by choosing prices (forecasts) that make the aggregate gambler’s expected profit zero via a fixed-point argument, guaranteeing individual gambler profit is bounded.",
      "concept_category": "implementation mechanism",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Section 3 proves existence through fixed-point and measurable-selection theorems."
    },
    {
      "name": "Hahn-Banach derived gamblers testing incomplete model compliance",
      "aliases": [
        "separating functional gamblers",
        "model-specific bet construction"
      ],
      "type": "concept",
      "description": "For every incomplete model, gamblers are built via the Hahn-Banach theorem to obtain profit exactly when forecasts violate that model, forming the policing mechanism that drives convergence.",
      "concept_category": "implementation mechanism",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Section 5 constructs these gamblers to bind the forecaster to each model."
    },
    {
      "name": "Proof of convergence theorem for incomplete-model dominant forecaster",
      "aliases": [
        "Theorem 2.1 convergence proof",
        "mathematical validation"
      ],
      "type": "concept",
      "description": "Theorem 2.1 rigorously shows that the constructed forecaster’s predictions converge (in renormalised KR distance) to every incomplete model satisfied by the true environment, with probability 1.",
      "concept_category": "validation evidence",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Provides the main formal evidence that the implementation meets the design goal."
    },
    {
      "name": "Sequence-property convergence example demonstrating forecast accuracy",
      "aliases": [
        "paired-bit example",
        "o2k+1=o2k toy validation"
      ],
      "type": "concept",
      "description": "Illustrative example where odd bits equal preceding even bits; forecasts converge to assigning probability 1 to this property despite arbitrary behaviour of even positions.",
      "concept_category": "validation evidence",
      "intervention_lifecycle": null,
      "intervention_lifecycle_rationale": null,
      "intervention_maturity": null,
      "intervention_maturity_rationale": null,
      "node_rationale": "Example in Section 2 shows the theory applies to non-trivial partial properties."
    },
    {
      "name": "Prototype incomplete-model dominant forecaster module for AI systems",
      "aliases": [
        "implement dominant forecaster",
        "apply incomplete-model forecasting"
      ],
      "type": "intervention",
      "description": "Design and integrate a forecasting component based on the dominant-forecaster construction to provide reliable long-term probability estimates for downstream AI decision modules in safety-critical deployments.",
      "concept_category": null,
      "intervention_lifecycle": "3",
      "intervention_lifecycle_rationale": "Section 6 Discussion calls for future work on concrete algorithms—placing this at prototype / pilot-study stage.",
      "intervention_maturity": "1",
      "intervention_maturity_rationale": "Only existence proofs exist; no implemented system reported, so maturity is foundational/theoretical.",
      "node_rationale": "Translates the validated theoretical framework into an actionable AI-safety engineering step (inferred)."
    }
  ],
  "edges": [
    {
      "type": "caused_by",
      "source_node": "Unreliable long-term forecasts in complex environments",
      "target_node": "Limitations of realizable and unrealizable forecasting assumptions",
      "description": "Forecast unreliability stems from the fact that existing assumptions either require the environment to be simpler than the model (realizable) or give only short-term guarantees (unrealizable).",
      "edge_confidence": "3",
      "edge_confidence_rationale": "Explicit argument in Introduction but qualitative rather than quantitative.",
      "edge_rationale": "Section 1 links the observed risk directly to these limitations."
    },
    {
      "type": "addressed_by",
      "source_node": "Limitations of realizable and unrealizable forecasting assumptions",
      "target_node": "Incomplete models as convex sets representing partial environment properties",
      "description": "Using incomplete models sidesteps the strict realizable/unrealizable dichotomy by only demanding the environment satisfy some simpler, partial properties.",
      "edge_confidence": "3",
      "edge_confidence_rationale": "Paper motivates incomplete models precisely to overcome earlier limitations.",
      "edge_rationale": "Section 1–2 transition."
    },
    {
      "type": "specified_by",
      "source_node": "Incomplete models as convex sets representing partial environment properties",
      "target_node": "Dominant forecaster approach using gamblers to converge to incomplete models",
      "description": "The dominant-forecaster design realises the theoretical idea by ensuring predictions converge to any incomplete model that the environment satisfies.",
      "edge_confidence": "4",
      "edge_confidence_rationale": "Formal definitions directly instantiate the concept.",
      "edge_rationale": "Section 3 formalism follows Section 2 insight."
    },
    {
      "type": "implemented_by",
      "source_node": "Dominant forecaster approach using gamblers to converge to incomplete models",
      "target_node": "Combinatorial prediction market pricing satisfying no unbounded profit for gamblers",
      "description": "Market-style pricing is the concrete mechanism that operationalises the dominant-forecaster concept.",
      "edge_confidence": "4",
      "edge_confidence_rationale": "Detailed constructive existence proof in Section 3.",
      "edge_rationale": "Implementation details immediately follow design rationale."
    },
    {
      "type": "implemented_by",
      "source_node": "Dominant forecaster approach using gamblers to converge to incomplete models",
      "target_node": "Hahn-Banach derived gamblers testing incomplete model compliance",
      "description": "Special gamblers, built via Hahn-Banach separation, are needed to tie the forecaster’s pricing to each incomplete model.",
      "edge_confidence": "4",
      "edge_confidence_rationale": "Section 5 explicitly constructs these gamblers as part of implementation.",
      "edge_rationale": "Shows full decomposition of the framework."
    },
    {
      "type": "validated_by",
      "source_node": "Combinatorial prediction market pricing satisfying no unbounded profit for gamblers",
      "target_node": "Proof of convergence theorem for incomplete-model dominant forecaster",
      "description": "The convergence theorem mathematically confirms that the pricing mechanism achieves the intended forecasting guarantees.",
      "edge_confidence": "5",
      "edge_confidence_rationale": "Rigorous proof (Theorem 2.1) depends on this mechanism.",
      "edge_rationale": "Central validation evidence."
    },
    {
      "type": "validated_by",
      "source_node": "Hahn-Banach derived gamblers testing incomplete model compliance",
      "target_node": "Proof of convergence theorem for incomplete-model dominant forecaster",
      "description": "The gamblers are essential to the proof that forecasts converge to the incomplete models.",
      "edge_confidence": "5",
      "edge_confidence_rationale": "Formal convergence relies on their construction.",
      "edge_rationale": "Same theorem references these gamblers explicitly."
    },
    {
      "type": "validated_by",
      "source_node": "Combinatorial prediction market pricing satisfying no unbounded profit for gamblers",
      "target_node": "Sequence-property convergence example demonstrating forecast accuracy",
      "description": "The example applies the pricing-based forecaster to a concrete property (paired bits), showing empirical-style validation.",
      "edge_confidence": "3",
      "edge_confidence_rationale": "Illustrative example, not large-scale empirical study.",
      "edge_rationale": "Example relies on the implemented mechanism."
    },
    {
      "type": "motivates",
      "source_node": "Proof of convergence theorem for incomplete-model dominant forecaster",
      "target_node": "Prototype incomplete-model dominant forecaster module for AI systems",
      "description": "The formal guarantee motivates building practical forecasting modules based on the theoretical construction.",
      "edge_confidence": "2",
      "edge_confidence_rationale": "Intervention is inferred; paper only suggests future work.",
      "edge_rationale": "Section 6 Discussion explicitly calls for such development."
    },
    {
      "type": "motivates",
      "source_node": "Sequence-property convergence example demonstrating forecast accuracy",
      "target_node": "Prototype incomplete-model dominant forecaster module for AI systems",
      "description": "Concrete examples increase confidence that a practical module could work, encouraging prototyping.",
      "edge_confidence": "2",
      "edge_confidence_rationale": "Inferred but grounded in example success.",
      "edge_rationale": "Example shows implementability in a simple setting."
    }
  ],
  "meta": [
    {
      "key": "date_published",
      "value": "2017-05-12T00:00:00Z"
    },
    {
      "key": "title",
      "value": "Forecasting using incomplete models"
    },
    {
      "key": "authors",
      "value": [
        "Vanessa Kosoy"
      ]
    },
    {
      "key": "url",
      "value": "https://arxiv.org/abs/1705.04630"
    },
    {
      "key": "source",
      "value": "arxiv"
    }
  ]
}